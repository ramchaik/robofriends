{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","robot","id","name","email","className","src","alt","CardList","robots","cards","map","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","searchfield","target","value","fetch","then","res","json","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,EAVF,SAAC,GAAoC,IAAD,IAAjCC,MAASC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACjC,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,6BAAKJ,IACL,4BAAIC,QCEKI,EANE,SAAC,GAAqB,IAAD,IAAlBC,OACZC,QAD8B,MAAT,GAAS,GACfC,KAAI,SAACV,GAAD,OAAW,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,OAErD,OAAO,8BAAMQ,KCiBAE,EArBf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,EADrB,qDAQE,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,MAT9B,oBAYE,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAGFG,KAAKL,MAAMO,aAjBtB,GAAkCC,aCUnBC,EAVA,SAACT,GAOd,OAAO,qBAAKU,MANS,CACnBC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAGH,SAA2Bb,EAAMO,YCM3BO,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKvB,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVwB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCuCHI,G,wDAxCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKf,SAAS,CAAEgB,YAAaD,EAAME,OAAOC,SAb1C,EAAKvB,MAAQ,CACXL,OAAQ,GACR0B,YAAa,IAJH,E,sDAQd,WAAsB,IAAD,OACnBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9B,GAAD,OAAY,EAAKU,SAAS,CAAEV,gB,oBAOtC,WACE,MAAgCS,KAAKJ,MAA7BL,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,YACVO,EAAiBjC,EAAOkC,QAAO,SAAC1C,GAAD,OACnCA,EAAME,KAAKyC,cAAcC,SAASV,EAAYS,kBAGhD,OAAQnC,EAAOqC,OAGb,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWuB,aAAcV,KAAKe,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQiC,WAPxB,oBAAIrC,UAAU,KAAd,yB,GA1BYgB,cCKH0B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd5416c3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ robot: { id, name, email } }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots = [] }) => {\n  const cards = robots.map((robot) => <Card key={robot.id} robot={robot} />);\n\n  return <div>{cards}</div>;\n};\n\nexport default CardList;\n","import React, { Component } from \"react\";\n\nexport class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  const scrollStyles = {\n    overflowY: \"scroll\",\n    border: \"1px solid black\",\n    height: \"800px\",\n  };\n\n  return <div style={scrollStyles}>{props.children}</div>;\n};\n\nexport default Scroll;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentWillMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n      .then((res) => res.json())\n      .then((robots) => this.setState({ robots }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n\n    return !robots.length ? (\n      <h1 className=\"tc\">Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"tachyons\";\nimport App from \"./containers/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}